{"version":3,"sources":["redux/budget/budgetReducer.js","redux/budget/budgetTypes.js","redux/expenses/expensesReducer.js","redux/expenses/expensesTypes.js","redux/rootReducer.js","redux/store.js","redux/expenses/expensesSelectors.js","components/shared/Form.js","components/shared/Label.js","components/shared/Input.js","components/shared/Button.js","components/BudgetForm.js","redux/budget/budgetActions.js","components/ExpenseForm.js","redux/expenses/expensesActions.js","components/ExpensesTable.js","components/ExpenceTableContainer.js","redux/budget/budgetSelectors.js","components/Value.js","components/Values.js","components/ValuesContainer.js","components/App.js","components/AppContainer.js","index.js"],"names":["budgetReducer","state","action","type","payload","budget","expensesReducer","expense","filter","note","id","combineReducers","expenses","store","createStore","rootReducer","window","__REDUX_DEVTOOLS_EXTENSION__","getExpenses","calculateTotalExpenses","reduce","total","Number","amount","StyledForm","styled","form","Form","onSubmit","children","StyledLabel","label","props","customStyles","Label","StyledInput","input","Input","value","onChange","name","defaultProps","StyledButton","button","Button","onClick","BudgetForm","handleChange","e","setState","target","handleSubmit","preventDefault","saveBudget","this","Component","connect","dispatch","budgetActions","ExpenseForm","addExpense","shortid","generate","expensesActions","Table","table","ExpensesTable","removeExpense","map","key","expensesSelectors","getBudget","Container","div","isPositive","p","Amount","Value","section","Values","totalExpenses","balance","budgetSelectors","App","ValuesContainer","ReactDOM","render","AppContainer","document","getElementById"],"mappings":"2QAWeA,EATO,WAAwB,IAAvBC,EAAsB,uDAAd,EAAGC,EAAW,uCAC3C,OAAQA,EAAOC,MACb,ICHuB,cDIrB,OAAOD,EAAOE,QAAQC,OACxB,QACE,OAAOJ,I,QEMEK,EAXS,WAAyB,IAAxBL,EAAuB,uDAAf,GAAIC,EAAW,uCAC9C,OAAQA,EAAOC,MACb,ICJuB,cDKrB,MAAM,GAAN,mBAAWF,GAAX,CAAkBC,EAAOE,QAAQG,UACnC,ICJ0B,iBDKxB,OAAON,EAAMO,QAAO,SAAAC,GAAI,OAAIA,EAAKC,KAAOR,EAAOE,QAAQM,MACzD,QACE,OAAOT,IELEU,cAAgB,CAC7BN,OAAQL,EACRY,SAAUN,ICGGO,EANDC,YACZC,EAEAC,OAAOC,8BAAgCD,OAAOC,gCCNnCC,G,MAAc,SAAAjB,GAAK,OAAIA,EAAMW,WAE7BO,EAAyB,SAAAlB,GAEpC,OADiBiB,EAAYjB,GACbmB,QAAO,SAACC,EAAOd,GAAR,OAAoBc,EAAQC,OAAOf,EAAQgB,UAAS,I,sWCA7E,IAAMC,EAAaC,IAAOC,KAAV,KAmBDC,EATF,SAAC,GAAD,QAAGC,gBAAH,MAAc,kBAAM,MAApB,EAA0BC,EAA1B,EAA0BA,SAA1B,OACX,kBAACL,EAAD,CAAYI,SAAUA,GAAWC,I,mKCXnC,IAAMC,EAAcL,IAAOM,MAAV,KAKb,SAAAC,GAAK,OAAIA,EAAMC,gBAYJC,EATD,SAAC,GAAD,IAAGL,EAAH,EAAGA,SAAUI,EAAb,EAAaA,aAAb,OACZ,kBAACH,EAAD,CAAaG,aAAcA,GAAeJ,I,4RCT5C,IAAMM,EAAcV,IAAOW,MAAV,KAeXC,EAAQ,SAAC,GAAD,QACZlC,YADY,MACL,QADK,MAEZmC,aAFY,MAEJ,GAFI,MAGZC,gBAHY,MAGD,kBAAM,MAHL,MAIZC,YAJY,MAIL,GAJK,SAKR,kBAACL,EAAD,CAAahC,KAAMA,EAAMmC,MAAOA,EAAOC,SAAUA,EAAUC,KAAMA,KASvEH,EAAMI,aAAe,CACnBtC,KAAM,QACNmC,MAAO,GACPE,KAAM,IAEOH,Q,yjBClCf,IAAMK,EAAejB,IAAOkB,OAAV,KAwBZC,EAAS,SAAC,GAAD,QAAGzC,YAAH,MAAU,SAAV,MAAoB4B,aAApB,MAA4B,GAA5B,MAAgCc,eAAhC,MAA0C,kBAAM,MAAhD,SACb,kBAACH,EAAD,CAAcvC,KAAMA,EAAM0C,QAASA,GAChCd,IAULa,EAAOH,aAAe,CACpBtC,KAAM,UACN0C,QAAS,kBAAM,OAEFD,QC/BTE,E,2MACJ7C,MAAQ,CACNI,OAAQ,G,EAOV0C,aAAe,SAAAC,GACb,EAAKC,SAAS,CACZ5C,OAAQiB,OAAO0B,EAAEE,OAAOZ,U,EAI5Ba,aAAe,SAAAH,GACbA,EAAEI,iBACF,EAAKpB,MAAMqB,WAAW,EAAKpD,MAAMI,QACjC,EAAK4C,SAAS,CAAE5C,OAAQ,K,wEAGhB,IACAA,EAAWiD,KAAKrD,MAAhBI,OACR,OACE,kBAAC,EAAD,CAAMuB,SAAU0B,KAAKH,cACnB,kBAAC,EAAD,CAAOlB,aA7BE,gCA6BT,0BAEE,kBAAC,EAAD,CAAO9B,KAAK,SAASmC,MAAOjC,EAAQkC,SAAUe,KAAKP,gBAGrD,kBAAC,EAAD,CAAQhB,MAAM,OAAO5B,KAAK,gB,GA9BToD,aA0CVC,cAAQ,MANI,SAAAC,GACzB,MAAO,CACLJ,WAAY,SAAAf,GAAK,OAAImB,EChDL,SAAAnB,GAClB,MAAO,CACLnC,KXJuB,cWKvBC,QAAS,CAAEC,OAAQiC,ID6CWoB,CAAmBpB,QAItCkB,CAAkCV,G,iCE1C3Ca,E,2MACJ1D,MAAQ,CACNuC,KAAM,GACNjB,OAAQ,G,EAOVwB,aAAe,SAAAC,GACb,EAAKC,SAAL,eACGD,EAAEE,OAAOV,KAAOQ,EAAEE,OAAOZ,S,EAI9Ba,aAAe,SAAAH,GACbA,EAAEI,iBAEF,EAAKpB,MAAM4B,WAAX,eAA2B,EAAK3D,QAChC,EAAKgD,SAAS,CAAET,KAAM,GAAIjB,OAAQ,K,wEAG1B,IAAD,EACkB+B,KAAKrD,MAAtBuC,EADD,EACCA,KAAMjB,EADP,EACOA,OACd,OACE,kBAAC,EAAD,CAAMK,SAAU0B,KAAKH,cACnB,kBAAC,EAAD,CAAOlB,aA/BE,gCA+BT,qBAEE,kBAAC,EAAD,CACE9B,KAAK,OACLqC,KAAK,OACLF,MAAOE,EACPD,SAAUe,KAAKP,gBAGnB,kBAAC,EAAD,CAAOd,aAxCE,gCAwCT,uBAEE,kBAAC,EAAD,CACE9B,KAAK,SACLqC,KAAK,SACLF,MAAOf,EACPgB,SAAUe,KAAKP,gBAInB,kBAAC,EAAD,CAAQhB,MAAM,MAAM5B,KAAK,gB,GA9CPoD,aA0DXC,cAAQ,MANI,SAAAC,GACzB,MAAO,CACLG,WAAY,SAAArD,GAAO,OAAIkD,EChER,SAAC,GAAsB,IAApBjB,EAAmB,EAAnBA,KAAMjB,EAAa,EAAbA,OAC1B,MAAO,CACLpB,KXLuB,cWMvBC,QAAS,CACPG,QAAS,CACPG,GAAImD,IAAQC,WACZtB,OACAjB,OAAQD,OAAOC,MDyDawC,CAAoBxD,QAIzCiD,CAAkCG,G,yQElEjD,IAAMK,EAAQvC,IAAOwC,MAAV,KAsDIC,EAtCO,SAAC,GAAD,IAAGtD,EAAH,EAAGA,SAAUuD,EAAb,EAAaA,cAAb,OACpB,6BACGvD,GACC,kBAACoD,EAAD,KACE,+BACE,4BACE,4CACA,8CACA,+BAGJ,+BACGpD,EAASwD,KAAI,gBAAG1D,EAAH,EAAGA,GAAI8B,EAAP,EAAOA,KAAMjB,EAAb,EAAaA,OAAb,OACZ,wBAAI8C,IAAK3D,GACP,4BAAK8B,GACL,4BAAKjB,GACL,4BACE,kBAAC,EAAD,CAAQQ,MAAM,SAASc,QAAS,kBAAMsB,EAAczD,eCrBrD8C,eAZS,SAAAvD,GACtB,MAAO,CACLW,SAAU0D,EAA8BrE,OAIjB,SAAAwD,GACzB,MAAO,CACLU,cAAe,SAAAzD,GAAE,OAAI+C,EFGH,SAAA/C,GACpB,MAAO,CACLP,KXhB0B,iBWiB1BC,QAAS,CAAEM,OENmBqD,CAAuBrD,QAI1C8C,CAA6CU,GCftDK,EAAY,SAAAtE,GAAK,OAAIA,EAAMI,QAMlB,EAAEkE,EAAF,EAJU,SAAAtE,GAAK,OAC5BqB,OAAOiD,EAAUtE,IACjBqB,OAAOgD,EAAyCrE,K,odCFlD,IAAMuE,GAAY/C,IAAOgD,IAAV,MAGJ,SAAAzC,GAAK,OAAKA,EAAM0C,WAAa,UAAY,aAI9CxC,GAAQT,IAAOkD,EAAV,KAQLC,GAASnD,IAAOkD,EAAV,KAMNE,GAAQ,SAAC,GAAD,IAAG9C,EAAH,EAAGA,MAAOO,EAAV,EAAUA,MAAOoC,EAAjB,EAAiBA,WAAjB,OACZ,kBAACF,GAAD,CAAWE,WAAYA,GACrB,kBAAC,GAAD,KAAQ3C,GACR,kBAAC6C,GAAD,KAAStC,EAAT,WAUJuC,GAAMpC,aAAe,CACnBiC,YAAY,GAECG,U,6JCpCf,IAAML,GAAY/C,IAAOqD,QAAV,MAoBAC,GAdA,SAAC,GAAD,IAAG1E,EAAH,EAAGA,OAAQ2E,EAAX,EAAWA,cAAeC,EAA1B,EAA0BA,QAA1B,OACb,kBAAC,GAAD,KACE,kBAAC,GAAD,CAAOlD,MAAM,SAASO,MAAOjC,EAAQqE,YAAU,IAC/C,kBAAC,GAAD,CAAO3C,MAAM,WAAWO,MAAO0C,IAC/B,kBAAC,GAAD,CAAOjD,MAAM,UAAUO,MAAO2C,EAASP,WAAYO,GAAW,MCFnDzB,gBARS,SAAAvD,GACtB,MAAO,CACLI,OAAQ6E,EAA0BjF,GAClC+E,cAAeV,EAAyCrE,GACxDgF,QAASC,EAAiCjF,MAI/BuD,CAAyBuB,I,gSCNxC,IAAMP,GAAY/C,IAAOgD,IAAV,MAqBAU,GATH,kBACV,kBAAC,GAAD,KACE,kBAAC,EAAD,MACA,kBAACC,GAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,QCdW5B,gBANS,SAAAvD,GACtB,MAAO,CACLW,SAAU0D,EAA8BrE,MAI7BuD,CAAyB2B,ICHxCE,IAASC,OACP,kBAAC,IAAD,CAAUzE,MAAOA,GACf,kBAAC0E,GAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.dcf4520e.chunk.js","sourcesContent":["import * as types from './budgetTypes';\r\n\r\nconst budgetReducer = (state = 0, action) => {\r\n  switch (action.type) {\r\n    case types.SAVE_BUDGET:\r\n      return action.payload.budget;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default budgetReducer;\r\n","// eslint-disable-next-line import/prefer-default-export\r\nexport const SAVE_BUDGET = 'SAVE_BUDGET';\r\n","import * as types from './expensesTypes';\r\n\r\nconst expensesReducer = (state = [], action) => {\r\n  switch (action.type) {\r\n    case types.ADD_EXPENSE:\r\n      return [...state, action.payload.expense];\r\n    case types.REMOVE_EXPENSE:\r\n      return state.filter(note => note.id !== action.payload.id);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default expensesReducer;\r\n","export const ADD_EXPENSE = 'ADD_EXPENSE';\r\n\r\nexport const REMOVE_EXPENSE = 'REMOVE_EXPENSE';\r\n","import { combineReducers } from 'redux';\r\nimport budgetReducer from './budget/budgetReducer';\r\nimport expensesReducer from './expenses/expensesReducer';\r\n\r\nexport default combineReducers({\r\n  budget: budgetReducer,\r\n  expenses: expensesReducer,\r\n});\r\n","import { createStore } from 'redux';\r\nimport rootReducer from './rootReducer';\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  // eslint-disable-next-line no-underscore-dangle\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(),\r\n);\r\n\r\nexport default store;\r\n","export const getExpenses = state => state.expenses;\r\n\r\nexport const calculateTotalExpenses = state => {\r\n  const expenses = getExpenses(state);\r\n  return expenses.reduce((total, expense) => total + Number(expense.amount), 0);\r\n};\r\n","import React from 'react';\r\nimport T from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledForm = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 16px;\r\n  width: 100%;\r\n  border-radius: 2px;\r\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\r\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\r\n`;\r\n\r\nconst Form = ({ onSubmit = () => null, children }) => (\r\n  <StyledForm onSubmit={onSubmit}>{children}</StyledForm>\r\n);\r\n\r\nForm.propTypes = {\r\n  onSubmit: T.func.isRequired,\r\n  children: T.node.isRequired,\r\n};\r\n\r\nexport default Form;\r\n","import React from 'react';\r\nimport T from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledLabel = styled.label`\r\n  display: inline-block;\r\n  font-size: 20px;\r\n  color: #171718;\r\n  cursor: pointer;\r\n  ${props => props.customStyles}\r\n`;\r\n\r\nconst Label = ({ children, customStyles }) => (\r\n  <StyledLabel customStyles={customStyles}>{children}</StyledLabel>\r\n);\r\n\r\nLabel.propTypes = {\r\n  children: T.node.isRequired,\r\n  customStyles: T.string.isRequired,\r\n};\r\n\r\nexport default Label;\r\n","import React from 'react';\r\nimport T from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledInput = styled.input`\r\n  color: #171718;\r\n  font: inherit;\r\n  font-size: 1.2rem;\r\n  padding: 16px;\r\n  border-radius: 4px;\r\n  border: 1px solid #bdbdbd;\r\n  width: 100%;\r\n  outline: 0;\r\n\r\n  &:focus {\r\n    border: 1px solid #2b32b2;\r\n  }\r\n`;\r\n\r\nconst Input = ({\r\n  type = ' text',\r\n  value = '',\r\n  onChange = () => null,\r\n  name = '',\r\n}) => <StyledInput type={type} value={value} onChange={onChange} name={name} />;\r\n\r\nInput.propTypes = {\r\n  type: T.string,\r\n  value: T.oneOfType([T.number, T.string]),\r\n  onChange: T.func.isRequired,\r\n  name: T.string,\r\n};\r\n\r\nInput.defaultProps = {\r\n  type: ' text',\r\n  value: '',\r\n  name: '',\r\n};\r\nexport default Input;\r\n","import React from 'react';\r\nimport T from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledButton = styled.button`\r\n  display: inline-flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  color: #fff;\r\n  background-color: #3f51b5;\r\n  border: 0;\r\n  outline: 0;\r\n  padding: 8px 24px;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  box-shadow: 0px 2px 1px 1px rgba(0, 0, 0, 0.05);\r\n  font: inherit;\r\n  text-transform: uppercase;\r\n  user-select: none;\r\n\r\n  transition: background-color 200ms ease-in-out;\r\n\r\n  &:hover {\r\n    box-shadow: 0px 2px 1px 1px rgba(0, 0, 0, 0.15);\r\n    background-color: #303f9f;\r\n  }\r\n`;\r\n\r\nconst Button = ({ type = 'button', label = '', onClick = () => null }) => (\r\n  <StyledButton type={type} onClick={onClick}>\r\n    {label}\r\n  </StyledButton>\r\n);\r\n\r\nButton.propTypes = {\r\n  type: T.string,\r\n  label: T.string.isRequired,\r\n  onClick: T.func,\r\n};\r\n\r\nButton.defaultProps = {\r\n  type: ' button',\r\n  onClick: () => null,\r\n};\r\nexport default Button;\r\n","import React, { Component } from 'react';\r\nimport T from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport Form from './shared/Form';\r\nimport Label from './shared/Label';\r\nimport Input from './shared/Input';\r\nimport Button from './shared/Button';\r\nimport * as budgetActions from '../redux/budget/budgetActions';\r\n\r\nconst labelStyles = `\r\n  margin-bottom: 16px;  \r\n`;\r\n\r\nclass BudgetForm extends Component {\r\n  state = {\r\n    budget: 0,\r\n  };\r\n\r\n  static propTypes = {\r\n    saveBudget: T.func.isRequired,\r\n  };\r\n\r\n  handleChange = e => {\r\n    this.setState({\r\n      budget: Number(e.target.value),\r\n    });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.saveBudget(this.state.budget);\r\n    this.setState({ budget: 0 });\r\n  };\r\n\r\n  render() {\r\n    const { budget } = this.state;\r\n    return (\r\n      <Form onSubmit={this.handleSubmit}>\r\n        <Label customStyles={labelStyles}>\r\n          Enter your total budget\r\n          <Input type=\"number\" value={budget} onChange={this.handleChange} />\r\n        </Label>\r\n\r\n        <Button label=\"Save\" type=\"submit\" />\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    saveBudget: value => dispatch(budgetActions.save(value)),\r\n  };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(BudgetForm);\r\n","import * as types from './budgetTypes';\r\n\r\n// eslint-disable-next-line import/prefer-default-export\r\nexport const save = value => {\r\n  return {\r\n    type: types.SAVE_BUDGET,\r\n    payload: { budget: value },\r\n  };\r\n};\r\n","import React, { Component } from 'react';\r\nimport T from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport Form from './shared/Form';\r\nimport Label from './shared/Label';\r\nimport Input from './shared/Input';\r\nimport Button from './shared/Button';\r\nimport * as expensesActions from '../redux/expenses/expensesActions';\r\n\r\nconst labelStyles = `\r\n  margin-bottom: 16px;  \r\n`;\r\n\r\nclass ExpenseForm extends Component {\r\n  state = {\r\n    name: '',\r\n    amount: 0,\r\n  };\r\n\r\n  static propTypes = {\r\n    addExpense: T.func.isRequired,\r\n  };\r\n\r\n  handleChange = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    this.props.addExpense({ ...this.state });\r\n    this.setState({ name: '', amount: 0 });\r\n  };\r\n\r\n  render() {\r\n    const { name, amount } = this.state;\r\n    return (\r\n      <Form onSubmit={this.handleSubmit}>\r\n        <Label customStyles={labelStyles}>\r\n          Enter expense name\r\n          <Input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={name}\r\n            onChange={this.handleChange}\r\n          />\r\n        </Label>\r\n        <Label customStyles={labelStyles}>\r\n          Enter expense amount\r\n          <Input\r\n            type=\"number\"\r\n            name=\"amount\"\r\n            value={amount}\r\n            onChange={this.handleChange}\r\n          />\r\n        </Label>\r\n\r\n        <Button label=\"Add\" type=\"submit\" />\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    addExpense: expense => dispatch(expensesActions.add(expense)),\r\n  };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(ExpenseForm);\r\n","import shortid from 'shortid';\r\nimport * as types from './expensesTypes';\r\n\r\nexport const add = ({ name, amount }) => {\r\n  return {\r\n    type: types.ADD_EXPENSE,\r\n    payload: {\r\n      expense: {\r\n        id: shortid.generate(),\r\n        name,\r\n        amount: Number(amount),\r\n      },\r\n    },\r\n  };\r\n};\r\n\r\nexport const remove = id => {\r\n  return {\r\n    type: types.REMOVE_EXPENSE,\r\n    payload: { id },\r\n  };\r\n};\r\n","import React from 'react';\r\nimport T from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport Button from './shared/Button';\r\n\r\nconst Table = styled.table`\r\n  border-collapse: collapse;\r\n  text-align: center;\r\n  width: 100%;\r\n\r\n  tr {\r\n    border-bottom: 1px solid #212121;\r\n  }\r\n\r\n  td,\r\n  th {\r\n    padding-top: 8px;\r\n    padding-bottom: 8px;\r\n  }\r\n`;\r\n\r\nconst ExpensesTable = ({ expenses, removeExpense }) => (\r\n  <div>\r\n    {expenses && (\r\n      <Table>\r\n        <thead>\r\n          <tr>\r\n            <th>Expense name</th>\r\n            <th>Expense amount</th>\r\n            <th />\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {expenses.map(({ id, name, amount }) => (\r\n            <tr key={id}>\r\n              <td>{name}</td>\r\n              <td>{amount}</td>\r\n              <td>\r\n                <Button label=\"Delete\" onClick={() => removeExpense(id)} />\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </Table>\r\n    )}\r\n  </div>\r\n);\r\n\r\nExpensesTable.propTypes = {\r\n  expenses: T.arrayOf(\r\n    T.shape({\r\n      id: T.string.isRequired,\r\n      name: T.string.isRequired,\r\n      amount: T.number.isRequired,\r\n    }).isRequired,\r\n  ).isRequired,\r\n  removeExpense: T.func.isRequired,\r\n};\r\n\r\nexport default ExpensesTable;\r\n","import { connect } from 'react-redux';\r\nimport * as expensesSelectors from '../redux/expenses/expensesSelectors';\r\nimport * as expensesActions from '../redux/expenses/expensesActions';\r\nimport ExpensesTable from './ExpensesTable';\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    expenses: expensesSelectors.getExpenses(state),\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    removeExpense: id => dispatch(expensesActions.remove(id)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ExpensesTable);\r\n","import * as expensesSelectors from '../expenses/expensesSelectors';\r\n\r\nconst getBudget = state => state.budget;\r\n\r\nconst calculateBalance = state =>\r\n  Number(getBudget(state)) -\r\n  Number(expensesSelectors.calculateTotalExpenses(state));\r\n\r\nexport default { getBudget, calculateBalance };\r\n","import React from 'react';\r\nimport T from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nconst Container = styled.div`\r\n  text-align: center;\r\n  padding: 8px 24px;\r\n  color: ${props => (props.isPositive ? '#388E3C' : '#D32F2F')};\r\n  user-select: none;\r\n`;\r\n\r\nconst Label = styled.p`\r\n  margin-top: 0;\r\n  margin-bottom: 8px;\r\n  text-transform: uppercase;\r\n  font-weight: 500;\r\n  font-size: 24px;\r\n`;\r\n\r\nconst Amount = styled.p`\r\n  margin-top: 0;\r\n  margin-bottom: 0;\r\n  font-size: 48px;\r\n`;\r\n\r\nconst Value = ({ label, value, isPositive }) => (\r\n  <Container isPositive={isPositive}>\r\n    <Label>{label}</Label>\r\n    <Amount>{value}&nbsp;&#x24;</Amount>\r\n  </Container>\r\n);\r\n\r\nValue.propTypes = {\r\n  label: T.string.isRequired,\r\n  value: T.oneOfType([T.number, T.string]).isRequired,\r\n  isPositive: T.bool,\r\n};\r\n\r\nValue.defaultProps = {\r\n  isPositive: true,\r\n};\r\nexport default Value;\r\n","import React from 'react';\r\nimport T from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport Value from './Value';\r\n\r\nconst Container = styled.section`\r\n  display: inline-flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n`;\r\n\r\nconst Values = ({ budget, totalExpenses, balance }) => (\r\n  <Container>\r\n    <Value label=\"Budget\" value={budget} isPositive />\r\n    <Value label=\"Expenses\" value={totalExpenses} />\r\n    <Value label=\"Balance\" value={balance} isPositive={balance >= 0} />\r\n  </Container>\r\n);\r\n\r\nValues.propTypes = {\r\n  budget: T.oneOfType([T.number, T.string]).isRequired,\r\n  totalExpenses: T.number.isRequired,\r\n  balance: T.number.isRequired,\r\n};\r\n\r\nexport default Values;\r\n","import { connect } from 'react-redux';\r\nimport budgetSelectors from '../redux/budget/budgetSelectors';\r\nimport * as expensesSelectors from '../redux/expenses/expensesSelectors';\r\nimport Values from './Values';\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    budget: budgetSelectors.getBudget(state),\r\n    totalExpenses: expensesSelectors.calculateTotalExpenses(state),\r\n    balance: budgetSelectors.calculateBalance(state),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Values);\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport BudgetForm from './BudgetForm';\r\nimport ExpenseForm from './ExpenseForm';\r\nimport ExpensesTableContainer from './ExpenceTableContainer';\r\nimport ValuesContainer from './ValuesContainer';\r\n\r\nconst Container = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 340px 1fr;\r\n  align-items: flex-start;\r\n  grid-gap: 24px;\r\n  max-width: 960px;\r\n  padding-left: 16px;\r\n  padding-right: 16px;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n`;\r\n\r\nconst App = () => (\r\n  <Container>\r\n    <BudgetForm />\r\n    <ValuesContainer />\r\n    <ExpenseForm />\r\n    <ExpensesTableContainer />\r\n  </Container>\r\n);\r\n\r\nexport default App;\r\n","import { connect } from 'react-redux';\r\nimport * as expensesSelectors from '../redux/expenses/expensesSelectors';\r\nimport App from './App';\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    expenses: expensesSelectors.getExpenses(state),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(App);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport store from './redux/store';\r\nimport './index.css';\r\nimport AppContainer from './components/AppContainer';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <AppContainer />\r\n  </Provider>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}